'use strict';

const fs = require('fs');
const Plugin = require('broccoli-plugin');
const mergeTrees = require('broccoli-merge-trees');
const path = require('path');

class AddCustomFile extends Plugin {
  constructor(inputNodes, options) {
    super(...arguments);
    this.path = options.path;
  }

  build() {
    let outPath = path.join(this.path);
    // this needs to have broccoli-plugin v1 compatible code because the way this fixture is included
    // it doesn't really have a dependency on broccoli-plugin and relies on the hoisted broccoli-plugin
    // version, which can be v1 for some reason
    fs.mkdirSync(path.join(this.outputPath, path.dirname(outPath)))
    fs.writeFileSync(path.join(this.outputPath, outPath), '// File for test tree imported and added via postprocessTree()');
  }
}

const customTestFilePath = "my-custom-test-assets/test-dependency.js";

module.exports = {
  name: require('./package').name,

  included(app) {
    this._super.included(app);

    app.import(customTestFilePath, { type: 'test' });
  },

  postprocessTree(type, tree){
    if (type === 'test') {
      return mergeTrees([tree, new AddCustomFile([tree], {
        path: customTestFilePath
      })]);
    }
    return tree;
  }
};
